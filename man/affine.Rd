% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/methods-affine.R
\name{affine}
\alias{affine}
\alias{affine,ANY,missing-method}
\alias{affine,ANY,affine2d-method}
\alias{affine,SpatVector,matrix-method}
\alias{affine,giottoPoints,matrix-method}
\alias{affine,giottoPolygon,matrix-method}
\alias{affine,spatLocsObj,matrix-method}
\alias{affine,giottoLargeImage,matrix-method}
\alias{affine,giottoAffineImage,matrix-method}
\alias{affine,affine2d,matrix-method}
\title{Affine transformations}
\usage{
\S4method{affine}{ANY,missing}(x)

\S4method{affine}{ANY,affine2d}(x, y, ...)

\S4method{affine}{SpatVector,matrix}(x, y, inv = FALSE, ...)

\S4method{affine}{giottoPoints,matrix}(x, y, inv = FALSE, ...)

\S4method{affine}{giottoPolygon,matrix}(x, y, inv = FALSE, ...)

\S4method{affine}{spatLocsObj,matrix}(x, y, inv = FALSE, ...)

\S4method{affine}{giottoLargeImage,matrix}(x, y, inv = FALSE, ...)

\S4method{affine}{giottoAffineImage,matrix}(x, y, inv = FALSE, ...)

\S4method{affine}{affine2d,matrix}(x, y, inv = FALSE, ...)
}
\arguments{
\item{x}{object}

\item{...}{additional args to pass (none implemented)}

\item{inv}{logical. Whether the inverse of the affine transform should
be applied.}

\item{m}{\code{matrix} or coercible to \code{matrix}. Should be a matrix with either
2 or 3 columns (linear or affine).}
}
\value{
affine transformed object
}
\description{
Apply an affine transformation matrix to a spatial object.
Currently only works for 2D transforms.
}
\examples{
m <- diag(rep(1, 3))
trans_m <- matrix(c(1, 0, 0, 0, 1, 0, 200, 300, 1), nrow = 3)
scale_m <- matrix(c(2, 0, 0, 0, 3, 0, 0, 0, 1), nrow = 3)
aff_m <- matrix(c(2, 3, 0, 0.2, 3, 0, 100, 29, 1), nrow = 3)

gpoints <- GiottoData::loadSubObjectMini("giottoPoints")
gpoly <- GiottoData::loadSubObjectMini("giottoPolygon")
sl <- GiottoData::loadSubObjectMini("spatLocsObj")

# giottoPoints ##############################################
plot(gpoints)
plot(affine(gpoints, trans_m))

# giottoPolygon #############################################
plot(gpoly)
plot(affine(gpoly, scale_m))

# spatLocsObj ###############################################
plot(affine(sl, m))
plot(affine(sl, trans_m))
plot(affine(sl, scale_m))
# this transformation can be inverted
aff_sl <- affine(sl, aff_m)
plot(aff_sl)
plot(affine(aff_sl, aff_m, inv = TRUE))
}
